@model SMS.Model.ChangePassword_VM

@{
    ViewBag.Title = "ManageChangePassword";
}

<h2>Change Password</h2>


@using (Html.BeginForm("ManageChangePassword", "Account"))
{
    @Html.HiddenFor(m => m.Forgotuid)
    @Html.HiddenFor(m => m.UserName)
    @Html.HiddenFor(m => m.ReturnToken)
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    @if (!String.IsNullOrWhiteSpace(ViewBag.Success))
    {
        <label class="bg-success text-white alertmsg">@ViewBag.Success</label>
    }
    @if (!String.IsNullOrWhiteSpace(ViewBag.Error))
    {
        <label class="bg-error text-white alertmsg">@ViewBag.Error</label>
    }

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
